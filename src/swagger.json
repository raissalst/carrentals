{
  "openapi": "3.0.0",
  "info": {
    "title": "Cars Rentals API",
    "description": "Documentation for the Car Rentals API. ",
    "contact": {
      "url": "https://github.com/raissalst/carrentals"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Car Rentals API local host"
    },
    {
      "url": "https://carrental-capstone.herokuapp.com/api",
      "description": "Car Rentals API"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "description": "Creates a new user (cliente, empresa ou admin)",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              },
              "examples": {
                "Customer Register": {
                  "$ref": "#/components/examples/CustomerRegister"
                },
                "Company Register": {
                  "$ref": "#/components/examples/CompanyRegister"
                },
                "Admin Register": {
                  "$ref": "#/components/examples/AdminRegister"
                }
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "statusCode": 409,
                  "message": "User email, cpf or cnpj already registered"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      },
      "get": {
        "description": "Get private information of all registered users (clientes, empresas and admins). Only admin authorization.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "User login",
        "tags": ["users"],
        "requestBody": {
          "description": "Use email and password of created users examples",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400":{
            "$ref": "#/components/responses/Bad Request Error"
          },
          "401":{
            "description": "Unauthorized",
            "content": {
              "application/json":{
                "schema": {
                  "example": {
                    "error": "Wrong email or password"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users?userType=param": {
      "get": {
        "description": "Visualize private users information by user type. Only admin authorization.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userType",
            "schema": {
              "type": "string",
              "default": "cliente"
            },
            "required": false,
            "description": "User type to be listed (cliente, empresa or admin)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          },
          "400":{
            "$ref": "#/components/responses/Bad Request Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Visualize specific public profile data. Companies can retrieve customer or company profiles, customer can retrieve companies profile, and an admin can retrieve public and private companies data.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "default": "8a5813d5-1307-486f-b35b-f7d7f2c8b13a"
            },

            "description": "Use an id from a created user (customer or company)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          },
          "400":{
            "$ref": "#/components/responses/Bad Request Error"
          }
        }
      },
      "patch": {
        "description": "Activate or deactivate a company or a customer profile. Only admin authorization.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "example": "2c97c2b8-e215-457b-95de-9cdf884fc40c",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Use an id from a created user"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          },
          "400":{
            "$ref": "#/components/responses/Bad Request Error"
          }
        }
      }
    },
    "/users/profile": {
      "patch": {
        "description": "Update logged in user data.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              },
              "examples": {
                "Customer Name Update": {
                  "value": {
                    "name": "Novo nome"
                  }
                },
                "Company phone update": {
                  "value": {
                    "phone": "0122999221234"
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Visualize private information of a logged in user profile.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400":{
            "$ref": "#/components/responses/Bad Request Error"
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      },
      "delete": {
        "description": "Deactivate logged in user profile.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/users/profile/cars": {
      "get": {
        "description": "Visualize all cars information of a logged in company. Only company authorization.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "Unauthroized User error": {
                "example": {
                  "status": "error",
                  "statusCode": 401,
                  "message": "Unauthorized"
                }
              },
              "Unauthorized Missing token error": {
                "example": {
                  "status": "error",
                  "statusCode": 401,
                  "message": "missing authorization token"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile/cars?availableToRent=param": {
      "get": {
        "description": "Visualize all available/unavailable cars of a logged in company. Only company authorization.",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "availableToRent",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "required": false,
            "description": "Availability can be true or false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/users/profile/rentals": {
      "get": {
        "description": "Visualize rental history of a logged in user (company or customer authorization).",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rentals"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile/rentals?returnedCar=param": {
      "get": {
        "description": "Visualize history of active/inative rentals of a logged in user. (company or customer authorization)",
        "tags": ["users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "returnedCar",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "required": false,
            "description": "Use false for active rentals and true for inactive rentals"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rentals"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/cars": {
      "get": {
        "description": "Visualize public information of all registered available cars.",
        "tags": ["cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200":{
            "description": "OK",
            "content": {
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      },
      "post": {
        "description": "Register cars to rent",
        "tags": ["cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Car"
              },
              "examples": {
                "Car Register": {
                  "$ref": "#/components/examples/CarRegister"
                }
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "201": {
            "description": "CREATED",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/cars?availableToRent={availableToRent}&&isActive={isActive}": {
      "get": {
        "description": "Visualize all public data of unavaillable/inactive registered cars. Only admin authorization.",
        "tags": ["cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "availableToRent",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "required": false,
            "description": "Retrieves cars available to rent or not"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean",
              "default": true
            },
            "required": false,
            "description": "Retrieves active or inactive cars"
          }
        ],
        "responses": {
          "200":{
            "description": "OK",
            "content": {
              "application/json":{
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "400":{
            "description": "Bad Request",
            "content": {
              "application/json":{
                "schema":{
                  "example":{
                    "error": "Filter not available."
                  }
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/cars?": {
      "get": {
        "description": "Visualize available and active cars with filters. Only customer authorization.",
        "tags": ["cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search for car name"
          },
          {
            "in": "query",
            "name": "model",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search for car model"
          },
          {
            "in": "query",
            "name": "brand",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search for car brand"
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search for car fabrication year"
          },
          {
            "in": "query",
            "name": "color",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search for car color"
          },
          {
            "in": "query",
            "name": "doors",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search for car number of doors (2, 3 or 4)"
          },
          {
            "in": "query",
            "name": "fuelType",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search for car fuel type (flex, híbrido, eletrico, gasolina, diesel ou alcool)"
          },
          {
            "in": "query",
            "name": "gear",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Search car for gear type automatico or manual"
          },
          {
            "in": "query",
            "name": "rentalPricePerDay",
            "schema": {
              "type": "number"              
            },
            "required": false,
            "description": "Search car for daily rental price"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          },
          "400":{
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "error": "bad request"
                  }
                }
              }
            }
          }
        }

      }
    },
    "/cars/{id}": {
      "get": {
        "description": "Visualize all public data of a specific car.",
        "tags": ["cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "default": "59c15d72-4e27-4c81-8ba0-d1fcb3d8ebb3"
            },
            "description": "Use an id from a created car"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          },
          "400":{
            "$ref": "#/components/responses/Bad Request Error"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "status": "error",
                  "statusCode": 400,
                  "message": "Car not found."
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Rent a car. Only customer authorization.",
        "tags": ["cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rent Car"
              },
              "examples": {
                "Rent a car": {
                  "$ref": "#/components/examples/Car Rent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "default": "59c15d72-4e27-4c81-8ba0-d1fcb3d8ebb3"
            },
            "description": "Pass an id from a created car"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "400":{
            "$ref": "#/components/responses/Bad Request Error"
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      },
      "patch": {
        "description": "Update car information. Only company authorization.",
        "tags": ["cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody":{
          "content": {
            "application/json":{
              "schema":{},
              "examples": {
                "Update Car Name":{
                  "value": {
                    "name": "novo nome do carro"
                  }
                },
                "Update Year and Color":{
                  "value":{
                    "year": "1950",
                    "color": "verde metálico"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema":{
              "type": "string",
              "default": "13d7752a-44b3-453a-a2c8-1841035f932c"
            },
            "required": true,
            "description": "Use an id from a created car."
          }
        ],
        "responses": {
          "204":{
            "description": "No Content"
          },
           "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      },
      "delete": {
        "description": "Deactivates a car. Only company authorization.",
        "tags": ["cars"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "default": "59c15d72-4e27-4c81-8ba0-d1fcb3d8ebb3"
            },
            "description": "Deactivates a car from company fleet."
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/rentals": {
      "get": {
        "description": "Visualize rentals history of all customers. Only admin authorization.",
        "tags": ["rentals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRentals"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/rentals?returnedCar=true": {
      "get": {
        "description": "Visualize active/inactive rentals history of all customers. Only admin authorization.",
        "tags": ["rentals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "returnedCar",
            "schema":{
              "type": "boolean",
              "default": true
            },
            "description": "Choose between true or false"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRentals"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    },
    "/rentals/{id}": {
      "get": {
        "description": "Visualize all details of a specific rent. Only admin authorization.",
        "tags": ["rentals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "default": "b8c9a38c-a259-4cca-8711-83fa0bae728c"
            },
            "description": "Use an id from a created car rent."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      },
      "post": {
        "description": "Close a specific rent. Only company authorization.",
        "tags": ["rentals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody":{
          "content": {
            "application/json":{
              "schema":{},
              "examples": {
                "Mileage Ran Value":{
                  "value":{
                    "mileageRan": 145
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema":{
              "type": "string",
              "default": "82067e94-625f-488e-a6a1-b511b8244ee6"
            },
            "required": true,
            "description": "Use an id from a valid rent created."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rental"
                }
              }
            }
          },
          "401":{
            "$ref": "#/components/responses/Unauthorized Error"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "UserRegister": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "phone",
          "userType",
          "address",
          "city",
          "state",
          "ountry"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "cnpj": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userType": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "address": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "address": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        }
      },
      "Car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "year": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "doors": {
            "type": "string"
          },
          "fuelType": {
            "type": "string"
          },
          "plate": {
            "type": "string"
          },
          "gear": {
            "type": "string"
          },
          "chassis": {
            "type": "string"
          },
          "currentMileage": {
            "type": "string"
          },
          "rentalPricePerDay": {
            "type": "string"
          },
          "availableToRent": {
            "type": "string"
          },
          "isActive": {
            "type": "string"
          }
        }
      },
      "Rental": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "rentalStartDate": {
            "type": "string"
          },
          "rentalReturnDate": {
            "type": "string"
          },
          "returnedCarDate": {
            "type": "string"
          },
          "returnedCar": {
            "type": "boolean"
          },
          "rentalPricePerDay": {
            "type": "number"
          },
          "rentalPricePreview": {
            "type": "number"
          },
          "rentalPriceTotal": {
            "type": "number"
          },
          "mileageRan": {
            "type": "number"
          }
        }
      },
      "Rentals": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "rentalStartDate": {
            "type": "string"
          },
          "rentalReturnDate": {
            "type": "string"
          },
          "returnedCarDate": {
            "type": "string"
          },
          "returnedCar": {
            "type": "boolean"
          },
          "rentalPricePerDay": {
            "type": "number"
          },
          "rentalPricePreview": {
            "type": "number"
          },
          "rentalPriceTotal": {
            "type": "number"
          },
          "mileageRan": {
            "type": "number"
          },
          "car": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "model": {
                "type": "string"
              },
              "brand": {
                "type": "string"
              },
              "year": {
                "type": "string"
              },
              "color": {
                "type": "string"
              },
              "doors": {
                "type": "number"
              },
              "fuelType": {
                "type": "string"
              },
              "plate": {
                "type": "string"
              },
              "gear": {
                "type": "string"
              },
              "chassis": {
                "type": "string"
              }
            }
          }
        }
      },
      "CustomerRentals": {
        "type": "object",
        "properties": {
          "clientes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "cpf": {
                "type": "string"
              },
              "cnpj": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "userType": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "rentals": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "rentalStartDate": {
                        "type": "string"
                      },
                      "rentalReturnDate": {
                        "type": "string"
                      },
                      "returnedCarDate": {
                        "type": "string"
                      },
                      "returnedCar": {
                        "type": "boolean"
                      },
                      "rentalPricePerDay": {
                        "type": "number"
                      },
                      "rentalPricePreview": {
                        "type": "number"
                      },
                      "rentalPriceTotal": {
                        "type": "number"
                      },
                      "mileageRan": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Rent Car": {
        "type": "object",
        "required": ["rentalStartDate", "rentalReturnDate"],
        "properties": {
          "rentalStartDate": {
            "type": "string"
          },
          "rentalReturnDate": {
            "type": "string"
          }
        }
      }
    },
    "examples": {
      "CustomerRegister": {
        "value": {
          "name": "Roberto",
          "email": "roberto235@gmail.com",
          "password": "123456",
          "phone": "21997771234",
          "userType": "cliente",
          "cpf": "902.950.180-46",
          "address": "Rua vinte e dois de outubro",
          "city": "São Gonçalo",
          "state": "RJ",
          "country": "Brasil"
        }
      },
      "CompanyRegister": {
        "value": {
          "name": "Rode Bem S/A",
          "email": "rode_bem@gmail.com",
          "password": "123456",
          "phone": "21998271255",
          "userType": "empresa",
          "cnpj": "51.363.333/0001-31",
          "address": "Rua das Calotas, 199 - Galpão",
          "city": "Magé",
          "state": "RJ",
          "country": "Brasil"
        }
      },
      "AdminRegister": {
        "value": {
          "name": "Ricardo",
          "email": "ricardo@gmail.com",
          "password": "123456",
          "phone": "21997873434",
          "userType": "admin",
          "cpf": "945.458.750-17",
          "address": "Rua São Clemente, 98/201",
          "city": "Botafogo",
          "state": "RJ",
          "country": "Brasil"
        }
      },
      "Customer": {
        "value": {
          "id": "122171a3-20d1-4079-b7c5-f3eff02680c1",
          "name": "Roberto",
          "email": "roberto235@gmail.com",
          "phone": "21997771234",
          "cnpj": "51.363.333/0001-31",
          "userType": "cliente",
          "address": {
            "id": "e6471557-49ac-4f1d-a9e4-60b759c17ca8",
            "address": "Rua vinte e dois de outubro",
            "city": "São Gonçalo",
            "state": "RJ",
            "country": "Brasil"
          }
        }
      },
      "UserLogin": {
        "value": {
          "email": "roberto235@gmail.com",
          "password": "123456"
        }
      },
      "CarRegister": {
        "value": {
          "cars": [
            {
              "name": "maverick",
              "model": "monster",
              "brand": "Ford",
              "year": "1978",
              "color": "azul",
              "doors": 2,
              "fuelType": "gasolina",
              "plate": "LPY7666",
              "gear": "manual",
              "chassis": "3C8FY77B82T297664",
              "currentMileage": 3856,
              "rentalPricePerDay": 195.0
            }
          ]
        }
      },
      "Car Rent": {
        "value": {
          "rentalStartDate": "10/05/2023",
          "rentalReturnDate": "15/05/2023"
        }
      }
    },
    "responses": {
      "Unauthorized Error": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "example": {
                "error": "missing authorization token"
              }

            }
          }
        }
      },
      "Bad Request Error": {
        "description": "Bad request",
        "content": {
          "Bad Request Error": {
            "schema": {              
              "example": {
                "error": "bad request"
              }             
            }
          },
          "Missing Key Error": {
            "schema": {
              "example": {
                "error": "email must be a valid email"
              }
            }
          }
        }
      }
    }
  }
}
